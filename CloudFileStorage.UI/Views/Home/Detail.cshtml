@using CloudFileStorage.UI.Models.DTOs

@model CloudFileStorage.UI.Models.DTOs.FileMetadataDto

@{
    ViewData["Title"] = "Dosya Detayı";
    var fileType = System.IO.Path.GetExtension(Model.FileName);
}

<div class="container mt-5" style="max-width: 600px;">
    <h3 class="mb-4 text-center">@Model.Name</h3>

    <ul class="list-group mb-4">
        <li class="list-group-item"><strong>Açıklama:</strong> @Model.Description</li>
        <li class="list-group-item"><strong>Yükleme Tarihi:</strong> @Model.UploadDate.ToString("dd.MM.yyyy")</li>
        <li class="list-group-item"><strong>Sahibi:</strong> @Model.OwnerName</li>
        <li class="list-group-item"><strong>Dosya Tipi:</strong> @fileType</li>
    </ul>

    <div class="text-center mb-4">
        <a asp-action="Download" asp-route-fileName="@Model.FileName" class="btn btn-outline-primary rounded-circle" style="width: 70px; height: 70px;" title="Dosyayı İndir">
            <i class="bi bi-download fs-2"></i>
        </a>
    </div>

    <div class="d-flex justify-content-center gap-3">
        <a asp-action="Index" class="btn btn-secondary">Geri Dön</a>
        @if (Model.Permission == CloudFileStorage.Common.Enums.Permission.Edit)
        {
            <button class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#editModal">Düzenle</button>
        }
    </div>
</div>

@await Html.PartialAsync("~/Views/Shared/Modals/_EditFileModal.cshtml", new UpdateFileDto
{
    Id = Model.Id,
    Name = Model.Name,
    Description = Model.Description,
    ShareType = Model.ShareType,
    Permission = Model.Permission
})


